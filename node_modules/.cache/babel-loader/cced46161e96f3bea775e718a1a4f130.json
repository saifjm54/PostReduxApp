{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n  return to;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nexports.__esModule = true;\nexports.Relation = exports.RelationKind = void 0;\nvar debug_1 = require(\"debug\");\nvar set_1 = __importDefault(require(\"lodash/set\"));\nvar get_1 = __importDefault(require(\"lodash/get\"));\nvar outvariant_1 = require(\"outvariant\");\nvar glossary_1 = require(\"../glossary\");\nvar executeQuery_1 = require(\"../query/executeQuery\");\nvar definePropertyAtPath_1 = require(\"../utils/definePropertyAtPath\");\nvar findPrimaryKey_1 = require(\"../utils/findPrimaryKey\");\nvar first_1 = require(\"../utils/first\");\nvar log = debug_1.debug('relation');\nvar RelationKind;\n(function (RelationKind) {\n  RelationKind[\"OneOf\"] = \"ONE_OF\";\n  RelationKind[\"ManyOf\"] = \"MANY_OF\";\n})(RelationKind = exports.RelationKind || (exports.RelationKind = {}));\nvar DEFAULT_RELATION_ATTRIBUTES = {\n  nullable: false,\n  unique: false\n};\nvar Relation = /** @class */function () {\n  function Relation(definition) {\n    this.source = null;\n    // These lazy properties are set after calling the \".apply()\" method.\n    this.dictionary = null;\n    this.db = null;\n    this.kind = definition.kind;\n    this.attributes = __assign(__assign({}, DEFAULT_RELATION_ATTRIBUTES), definition.attributes || {});\n    this.target = {\n      modelName: definition.to.toString(),\n      // @ts-expect-error Null is an intermediate value.\n      primaryKey: null\n    };\n    log('constructing a \"%s\" relation to \"%s\" with attributes: %o', this.kind, definition.to, this.attributes);\n  }\n  /**\n   * Applies the relation to the given entity.\n   * Creates a connection between the relation's target and source.\n   * Does not define the proxy property getter.\n   */\n  Relation.prototype.apply = function (entity, propertyPath, dictionary, db) {\n    this.dictionary = dictionary;\n    this.db = db;\n    var sourceModelName = entity[glossary_1.ENTITY_TYPE];\n    var sourcePrimaryKey = entity[glossary_1.PRIMARY_KEY];\n    this.source = {\n      modelName: sourceModelName,\n      propertyPath: propertyPath,\n      primaryKey: sourcePrimaryKey\n    };\n    // Get the referenced model's primary key name.\n    var targetPrimaryKey = findPrimaryKey_1.findPrimaryKey(this.dictionary[this.target.modelName]);\n    outvariant_1.invariant(targetPrimaryKey, 'Failed to create a \"%s\" relation to \"%s\": referenced model does not exist or has no primary key.', this.kind, this.target.modelName);\n    this.target.primaryKey = targetPrimaryKey;\n  };\n  /**\n   * Updates the relation references (values) to resolve the relation with.\n   */\n  Relation.prototype.resolveWith = function (entity, refs) {\n    var _a, _b;\n    var _this = this;\n    var _c, _d;\n    var exception = function (predicate, reason) {\n      var positionals = [];\n      for (var _i = 2; _i < arguments.length; _i++) {\n        positionals[_i - 2] = arguments[_i];\n      }\n      outvariant_1.invariant.apply(void 0, __spreadArray([predicate, \"Failed to resolve a \\\"%s\\\" relationship to \\\"%s\\\" at \\\"%s.%s\\\" (%s: \\\"%s\\\"): \" + reason, _this.kind, _this.target.modelName, _this.source.modelName, _this.source.propertyPath, _this.source.primaryKey, entity[_this.source.primaryKey]], __read(positionals)));\n    };\n    outvariant_1.invariant(this.source, 'Failed to resolve a \"%s\" relational property to \"%s\": relation has not been applied.', this.kind, this.target.modelName);\n    log('resolving a \"%s\" relational property to \"%s\" on \"%s.%s\" (\"%s\"):', this.kind, this.target.modelName, this.source.modelName, this.source.propertyPath, entity[this.source.primaryKey], refs);\n    log('entity of this relation:', entity);\n    // Support null as the next relation value for nullable relations.\n    if (refs === null) {\n      exception(this.attributes.nullable, 'cannot resolve a non-nullable relationship with null.');\n      log('this relation resolves with null');\n      // Override the relational property of the entity to return null.\n      this.setValueResolver(entity, function () {\n        return null;\n      });\n      return;\n    }\n    exception(this.target.primaryKey, 'referenced model has no primary key set.');\n    var referencesList = [].concat(refs);\n    var records = this.db.getModel(this.target.modelName);\n    log('records in the referenced model:', records.keys());\n    // Forbid referencing entities from a model different than the one\n    // defined in the\n    referencesList.forEach(function (ref) {\n      var refModelName = ref[glossary_1.ENTITY_TYPE];\n      var refPrimaryKey = ref[glossary_1.PRIMARY_KEY];\n      var refId = ref[_this.target.primaryKey];\n      exception(refModelName, 'expected a referenced entity to be \"%s\" but got %o', _this.target.modelName, ref);\n      exception(refModelName === _this.target.modelName, 'expected a referenced entity to be \"%s\" but got \"%s\" (%s: \"%s\").', _this.target.modelName, refModelName, refPrimaryKey, ref[refPrimaryKey]);\n      // Forbid referencing non-existing entities.\n      // This guards against assigning a compatible plain object\n      // as the relational value.\n      exception(records.has(refId), 'referenced entity \"%s\" (%s: \"%s\") does not exist.', refModelName, _this.target.primaryKey, refId);\n    });\n    // Ensure that unique relations don't reference\n    // entities that are already referenced by other entities.\n    if (this.attributes.unique) {\n      log('validating a unique \"%s\" relation to \"%s\" on \"%s.%s\"...', this.kind, this.target.modelName, this.source.modelName, this.source.propertyPath);\n      // Get the list of entities of the same entity type\n      // that reference the same relational values.\n      var extraneousEntities = executeQuery_1.executeQuery(this.source.modelName, this.source.primaryKey, {\n        where: set_1[\"default\"]((_a = {},\n        // Omit the current entity when querying\n        // the list of other entities that reference\n        // the same value.\n        _a[this.source.primaryKey] = {\n          notEquals: entity[this.source.primaryKey]\n        }, _a), this.source.propertyPath, (_b = {}, _b[this.target.primaryKey] = {\n          \"in\": referencesList.map(function (entity) {\n            return entity[_this.target.primaryKey];\n          })\n        }, _b))\n      }, this.db);\n      log('found other %s referencing the same %s:', this.source.modelName, this.target.modelName, extraneousEntities);\n      if (extraneousEntities.length > 0) {\n        var extraneousReferences_1 = extraneousEntities.flatMap(function (extraneous) {\n          var references = [].concat(get_1[\"default\"](extraneous, _this.source.propertyPath));\n          return references.map(function (entity) {\n            return entity[_this.target.primaryKey];\n          });\n        });\n        var firstInvalidReference = referencesList.find(function (entity) {\n          return extraneousReferences_1.includes(entity[_this.target.primaryKey]);\n        });\n        exception(false, 'the referenced \"%s\" (%s: \"%s\") belongs to another \"%s\" (%s: \"%s\").', this.target.modelName, this.target.primaryKey, firstInvalidReference === null || firstInvalidReference === void 0 ? void 0 : firstInvalidReference[this.target.primaryKey], this.source.modelName, (_c = extraneousEntities[0]) === null || _c === void 0 ? void 0 : _c[glossary_1.PRIMARY_KEY], (_d = extraneousEntities[0]) === null || _d === void 0 ? void 0 : _d[this.source.primaryKey]);\n      }\n    }\n    this.setValueResolver(entity, function () {\n      var queryResult = referencesList.reduce(function (result, ref) {\n        var _a;\n        return result.concat(executeQuery_1.executeQuery(_this.target.modelName, _this.target.primaryKey, {\n          where: (_a = {}, _a[_this.target.primaryKey] = {\n            equals: ref[_this.target.primaryKey]\n          }, _a)\n        }, _this.db));\n      }, []);\n      return _this.kind === RelationKind.OneOf ? first_1.first(queryResult) : queryResult;\n    });\n  };\n  Relation.prototype.setValueResolver = function (entity, resolver) {\n    var _this = this;\n    log('setting value resolver at \"%s\" on: %j', this.source.propertyPath, entity);\n    outvariant_1.invariant(entity[glossary_1.ENTITY_TYPE], 'Failed to set a value resolver on a \"%s\" relationship to \"%s\" at \"%s.%s\": provided object (%j) is not an entity.', this.kind, this.target.modelName, this.source.modelName, this.source.propertyPath.join('.'), entity);\n    definePropertyAtPath_1.definePropertyAtPath(entity, this.source.propertyPath, {\n      // Mark the property as enumerable so it gets listed\n      // when iterating over the entity's properties.\n      enumerable: true,\n      // Mark the property as configurable so it could be re-defined\n      // when updating it during the entity update (\"update\"/\"updateMany\").\n      configurable: true,\n      get: function () {\n        log('GET \"%s.%s\" on \"%s\" (\"%s\")', _this.source.modelName, _this.source.propertyPath, _this.source.modelName, entity[_this.source.primaryKey], _this);\n        var nextValue = resolver();\n        log('resolved \"%s\" relation at \"%s.%s\" (\"%s\") to:', _this.kind, _this.source.modelName, _this.source.propertyPath, entity[_this.source.primaryKey], nextValue);\n        return nextValue;\n      }\n    });\n  };\n  return Relation;\n}();\nexports.Relation = Relation;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__read","o","m","Symbol","iterator","r","ar","e","next","done","push","value","error","__spreadArray","to","from","il","j","__importDefault","mod","__esModule","exports","Relation","RelationKind","debug_1","require","set_1","get_1","outvariant_1","glossary_1","executeQuery_1","definePropertyAtPath_1","findPrimaryKey_1","first_1","log","debug","DEFAULT_RELATION_ATTRIBUTES","nullable","unique","definition","source","dictionary","db","kind","attributes","target","modelName","toString","primaryKey","entity","propertyPath","sourceModelName","ENTITY_TYPE","sourcePrimaryKey","PRIMARY_KEY","targetPrimaryKey","findPrimaryKey","invariant","resolveWith","refs","_a","_b","_this","_c","_d","exception","predicate","reason","positionals","_i","setValueResolver","referencesList","concat","records","getModel","keys","forEach","ref","refModelName","refPrimaryKey","refId","has","extraneousEntities","executeQuery","where","notEquals","map","extraneousReferences_1","flatMap","extraneous","references","firstInvalidReference","find","includes","queryResult","reduce","result","equals","OneOf","first","resolver","join","definePropertyAtPath","enumerable","configurable","get","nextValue"],"sources":["/home/saif/Documents/Proxym/redux-essentials-example-app/node_modules/@mswjs/data/lib/relations/Relation.js"],"sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nexports.Relation = exports.RelationKind = void 0;\nvar debug_1 = require(\"debug\");\nvar set_1 = __importDefault(require(\"lodash/set\"));\nvar get_1 = __importDefault(require(\"lodash/get\"));\nvar outvariant_1 = require(\"outvariant\");\nvar glossary_1 = require(\"../glossary\");\nvar executeQuery_1 = require(\"../query/executeQuery\");\nvar definePropertyAtPath_1 = require(\"../utils/definePropertyAtPath\");\nvar findPrimaryKey_1 = require(\"../utils/findPrimaryKey\");\nvar first_1 = require(\"../utils/first\");\nvar log = debug_1.debug('relation');\nvar RelationKind;\n(function (RelationKind) {\n    RelationKind[\"OneOf\"] = \"ONE_OF\";\n    RelationKind[\"ManyOf\"] = \"MANY_OF\";\n})(RelationKind = exports.RelationKind || (exports.RelationKind = {}));\nvar DEFAULT_RELATION_ATTRIBUTES = {\n    nullable: false,\n    unique: false\n};\nvar Relation = /** @class */ (function () {\n    function Relation(definition) {\n        this.source = null;\n        // These lazy properties are set after calling the \".apply()\" method.\n        this.dictionary = null;\n        this.db = null;\n        this.kind = definition.kind;\n        this.attributes = __assign(__assign({}, DEFAULT_RELATION_ATTRIBUTES), (definition.attributes || {}));\n        this.target = {\n            modelName: definition.to.toString(),\n            // @ts-expect-error Null is an intermediate value.\n            primaryKey: null\n        };\n        log('constructing a \"%s\" relation to \"%s\" with attributes: %o', this.kind, definition.to, this.attributes);\n    }\n    /**\n     * Applies the relation to the given entity.\n     * Creates a connection between the relation's target and source.\n     * Does not define the proxy property getter.\n     */\n    Relation.prototype.apply = function (entity, propertyPath, dictionary, db) {\n        this.dictionary = dictionary;\n        this.db = db;\n        var sourceModelName = entity[glossary_1.ENTITY_TYPE];\n        var sourcePrimaryKey = entity[glossary_1.PRIMARY_KEY];\n        this.source = {\n            modelName: sourceModelName,\n            propertyPath: propertyPath,\n            primaryKey: sourcePrimaryKey\n        };\n        // Get the referenced model's primary key name.\n        var targetPrimaryKey = findPrimaryKey_1.findPrimaryKey(this.dictionary[this.target.modelName]);\n        outvariant_1.invariant(targetPrimaryKey, 'Failed to create a \"%s\" relation to \"%s\": referenced model does not exist or has no primary key.', this.kind, this.target.modelName);\n        this.target.primaryKey = targetPrimaryKey;\n    };\n    /**\n     * Updates the relation references (values) to resolve the relation with.\n     */\n    Relation.prototype.resolveWith = function (entity, refs) {\n        var _a, _b;\n        var _this = this;\n        var _c, _d;\n        var exception = function (predicate, reason) {\n            var positionals = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                positionals[_i - 2] = arguments[_i];\n            }\n            outvariant_1.invariant.apply(void 0, __spreadArray([predicate, \"Failed to resolve a \\\"%s\\\" relationship to \\\"%s\\\" at \\\"%s.%s\\\" (%s: \\\"%s\\\"): \" + reason, _this.kind,\n                _this.target.modelName,\n                _this.source.modelName,\n                _this.source.propertyPath,\n                _this.source.primaryKey,\n                entity[_this.source.primaryKey]], __read(positionals)));\n        };\n        outvariant_1.invariant(this.source, 'Failed to resolve a \"%s\" relational property to \"%s\": relation has not been applied.', this.kind, this.target.modelName);\n        log('resolving a \"%s\" relational property to \"%s\" on \"%s.%s\" (\"%s\"):', this.kind, this.target.modelName, this.source.modelName, this.source.propertyPath, entity[this.source.primaryKey], refs);\n        log('entity of this relation:', entity);\n        // Support null as the next relation value for nullable relations.\n        if (refs === null) {\n            exception(this.attributes.nullable, 'cannot resolve a non-nullable relationship with null.');\n            log('this relation resolves with null');\n            // Override the relational property of the entity to return null.\n            this.setValueResolver(entity, function () {\n                return null;\n            });\n            return;\n        }\n        exception(this.target.primaryKey, 'referenced model has no primary key set.');\n        var referencesList = [].concat(refs);\n        var records = this.db.getModel(this.target.modelName);\n        log('records in the referenced model:', records.keys());\n        // Forbid referencing entities from a model different than the one\n        // defined in the\n        referencesList.forEach(function (ref) {\n            var refModelName = ref[glossary_1.ENTITY_TYPE];\n            var refPrimaryKey = ref[glossary_1.PRIMARY_KEY];\n            var refId = ref[_this.target.primaryKey];\n            exception(refModelName, 'expected a referenced entity to be \"%s\" but got %o', _this.target.modelName, ref);\n            exception(refModelName === _this.target.modelName, 'expected a referenced entity to be \"%s\" but got \"%s\" (%s: \"%s\").', _this.target.modelName, refModelName, refPrimaryKey, ref[refPrimaryKey]);\n            // Forbid referencing non-existing entities.\n            // This guards against assigning a compatible plain object\n            // as the relational value.\n            exception(records.has(refId), 'referenced entity \"%s\" (%s: \"%s\") does not exist.', refModelName, _this.target.primaryKey, refId);\n        });\n        // Ensure that unique relations don't reference\n        // entities that are already referenced by other entities.\n        if (this.attributes.unique) {\n            log('validating a unique \"%s\" relation to \"%s\" on \"%s.%s\"...', this.kind, this.target.modelName, this.source.modelName, this.source.propertyPath);\n            // Get the list of entities of the same entity type\n            // that reference the same relational values.\n            var extraneousEntities = executeQuery_1.executeQuery(this.source.modelName, this.source.primaryKey, {\n                where: set_1[\"default\"]((_a = {},\n                    // Omit the current entity when querying\n                    // the list of other entities that reference\n                    // the same value.\n                    _a[this.source.primaryKey] = {\n                        notEquals: entity[this.source.primaryKey]\n                    },\n                    _a), this.source.propertyPath, (_b = {},\n                    _b[this.target.primaryKey] = {\n                        \"in\": referencesList.map(function (entity) {\n                            return entity[_this.target.primaryKey];\n                        })\n                    },\n                    _b))\n            }, this.db);\n            log('found other %s referencing the same %s:', this.source.modelName, this.target.modelName, extraneousEntities);\n            if (extraneousEntities.length > 0) {\n                var extraneousReferences_1 = extraneousEntities.flatMap(function (extraneous) {\n                    var references = [].concat(get_1[\"default\"](extraneous, _this.source.propertyPath));\n                    return references.map(function (entity) { return entity[_this.target.primaryKey]; });\n                });\n                var firstInvalidReference = referencesList.find(function (entity) {\n                    return extraneousReferences_1.includes(entity[_this.target.primaryKey]);\n                });\n                exception(false, 'the referenced \"%s\" (%s: \"%s\") belongs to another \"%s\" (%s: \"%s\").', this.target.modelName, this.target.primaryKey, firstInvalidReference === null || firstInvalidReference === void 0 ? void 0 : firstInvalidReference[this.target.primaryKey], this.source.modelName, (_c = extraneousEntities[0]) === null || _c === void 0 ? void 0 : _c[glossary_1.PRIMARY_KEY], (_d = extraneousEntities[0]) === null || _d === void 0 ? void 0 : _d[this.source.primaryKey]);\n            }\n        }\n        this.setValueResolver(entity, function () {\n            var queryResult = referencesList.reduce(function (result, ref) {\n                var _a;\n                return result.concat(executeQuery_1.executeQuery(_this.target.modelName, _this.target.primaryKey, {\n                    where: (_a = {},\n                        _a[_this.target.primaryKey] = {\n                            equals: ref[_this.target.primaryKey]\n                        },\n                        _a)\n                }, _this.db));\n            }, []);\n            return _this.kind === RelationKind.OneOf ? first_1.first(queryResult) : queryResult;\n        });\n    };\n    Relation.prototype.setValueResolver = function (entity, resolver) {\n        var _this = this;\n        log('setting value resolver at \"%s\" on: %j', this.source.propertyPath, entity);\n        outvariant_1.invariant(entity[glossary_1.ENTITY_TYPE], 'Failed to set a value resolver on a \"%s\" relationship to \"%s\" at \"%s.%s\": provided object (%j) is not an entity.', this.kind, this.target.modelName, this.source.modelName, this.source.propertyPath.join('.'), entity);\n        definePropertyAtPath_1.definePropertyAtPath(entity, this.source.propertyPath, {\n            // Mark the property as enumerable so it gets listed\n            // when iterating over the entity's properties.\n            enumerable: true,\n            // Mark the property as configurable so it could be re-defined\n            // when updating it during the entity update (\"update\"/\"updateMany\").\n            configurable: true,\n            get: function () {\n                log('GET \"%s.%s\" on \"%s\" (\"%s\")', _this.source.modelName, _this.source.propertyPath, _this.source.modelName, entity[_this.source.primaryKey], _this);\n                var nextValue = resolver();\n                log('resolved \"%s\" relation at \"%s.%s\" (\"%s\") to:', _this.kind, _this.source.modelName, _this.source.propertyPath, entity[_this.source.primaryKey], nextValue);\n                return nextValue;\n            }\n        });\n    };\n    return Relation;\n}());\nexports.Relation = Relation;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}