{"ast":null,"code":"import { createSlice, nanoid } from \"@reduxjs/toolkit\";\nimport { sub } from \"date-fns\";\nconst initialState = [{\n  id: '1',\n  title: 'First Post!',\n  content: 'Hello',\n  date: sub(new Date(), {\n    minutes: 10\n  }).toISOString()\n}, {\n  id: '2',\n  title: 'Second Post',\n  content: 'More text',\n  date: sub(new Date(), {\n    minutes: 5\n  }).toISOString()\n}];\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    postAdded: {\n      reducer(state, action) {\n        state.push(action.payload);\n      },\n      prepare(title, content, userId) {\n        return {\n          payload: {\n            id: nanoid(),\n            date: new Date().toISOString(),\n            title,\n            content,\n            user: userId\n          }\n        };\n      }\n    },\n    postUpdated(state, action) {\n      const {\n        id,\n        title,\n        content\n      } = action.payload;\n      const existingPost = state.find(post => post.id === id);\n      if (existingPost) {\n        existingPost.title = title;\n        existingPost.content = content;\n      }\n    }\n  }\n});\nexport const {\n  postAdded,\n  postUpdated\n} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","sub","initialState","id","title","content","date","Date","minutes","toISOString","postsSlice","name","reducers","postAdded","reducer","state","action","push","payload","prepare","userId","user","postUpdated","existingPost","find","post","actions"],"sources":["/home/saif/Documents/Proxym/redux-essentials-example-app/src/features/posts/postsSlice.js"],"sourcesContent":["import { createSlice, nanoid } from \"@reduxjs/toolkit\";\nimport { sub } from \"date-fns\";\n\nconst initialState = [\n    {id: '1',title: 'First Post!',content:'Hello',date: sub(new Date(),{ minutes: 10 }).toISOString()},\n    { id: '2', title: 'Second Post', content: 'More text' , date: sub(new Date(),{minutes: 5}).toISOString()}\n]\n\nconst postsSlice = createSlice({\n    name: 'posts',\n    initialState,\n    reducers: {\n        postAdded: {\n            reducer(state , action){\n                state.push(action.payload)\n            },\n            prepare(title , content, userId) {\n                return {\n                    payload: {\n                        id: nanoid(),\n                        date: new Date().toISOString(),\n                        title,\n                        content,\n                        user: userId\n                    }\n                }\n            }\n        },\n        postUpdated(state,action) {\n            const {id , title , content } = action.payload\n            const existingPost = state.find(post => post.id === id)\n            if(existingPost){\n                existingPost.title = title\n                existingPost.content = content\n            }\n        }\n\n    }\n})\n\nexport const { postAdded, postUpdated } = postsSlice.actions\nexport default postsSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,MAAM,QAAQ,kBAAkB;AACtD,SAASC,GAAG,QAAQ,UAAU;AAE9B,MAAMC,YAAY,GAAG,CACjB;EAACC,EAAE,EAAE,GAAG;EAACC,KAAK,EAAE,aAAa;EAACC,OAAO,EAAC,OAAO;EAACC,IAAI,EAAEL,GAAG,CAAC,IAAIM,IAAI,CAAC,CAAC,EAAC;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC,CAACC,WAAW,CAAC;AAAC,CAAC,EAClG;EAAEN,EAAE,EAAE,GAAG;EAAEC,KAAK,EAAE,aAAa;EAAEC,OAAO,EAAE,WAAW;EAAGC,IAAI,EAAEL,GAAG,CAAC,IAAIM,IAAI,CAAC,CAAC,EAAC;IAACC,OAAO,EAAE;EAAC,CAAC,CAAC,CAACC,WAAW,CAAC;AAAC,CAAC,CAC5G;AAED,MAAMC,UAAU,GAAGX,WAAW,CAAC;EAC3BY,IAAI,EAAE,OAAO;EACbT,YAAY;EACZU,QAAQ,EAAE;IACNC,SAAS,EAAE;MACPC,OAAOA,CAACC,KAAK,EAAGC,MAAM,EAAC;QACnBD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MAC9B,CAAC;MACDC,OAAOA,CAACf,KAAK,EAAGC,OAAO,EAAEe,MAAM,EAAE;QAC7B,OAAO;UACHF,OAAO,EAAE;YACLf,EAAE,EAAEH,MAAM,CAAC,CAAC;YACZM,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC;YAC9BL,KAAK;YACLC,OAAO;YACPgB,IAAI,EAAED;UACV;QACJ,CAAC;MACL;IACJ,CAAC;IACDE,WAAWA,CAACP,KAAK,EAACC,MAAM,EAAE;MACtB,MAAM;QAACb,EAAE;QAAGC,KAAK;QAAGC;MAAQ,CAAC,GAAGW,MAAM,CAACE,OAAO;MAC9C,MAAMK,YAAY,GAAGR,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACtB,EAAE,KAAKA,EAAE,CAAC;MACvD,IAAGoB,YAAY,EAAC;QACZA,YAAY,CAACnB,KAAK,GAAGA,KAAK;QAC1BmB,YAAY,CAAClB,OAAO,GAAGA,OAAO;MAClC;IACJ;EAEJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEQ,SAAS;EAAES;AAAY,CAAC,GAAGZ,UAAU,CAACgB,OAAO;AAC5D,eAAehB,UAAU,CAACI,OAAO"},"metadata":{},"sourceType":"module"}