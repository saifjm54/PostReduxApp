{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { client } from '../../api/client';\nconst initialState = [];\nexport const fetchUsers = createAsyncThunk('users/fetchUsers', async () => {\n  const response = await client.get('/fakeApi/users');\n  return response.data;\n});\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder.addCase(fetchUsers.fulfilled, (state, action) => {\n      return action.payload;\n    });\n  }\n});\nexport default usersSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","client","initialState","fetchUsers","response","get","data","usersSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"sources":["/home/saif/Documents/Proxym/redux-essentials-example-app/src/features/users/usersSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { client } from '../../api/client'\n\nconst initialState = []\nexport const fetchUsers = createAsyncThunk('users/fetchUsers', async () => {\n    const response = await client.get('/fakeApi/users')\n    return response.data\n  })\n\nconst usersSlice = createSlice({\n    name: 'users',\n    initialState,\n    reducers: {},\n    extraReducers(builder) {\n        builder.addCase(fetchUsers.fulfilled, (state, action) => {\n          return action.payload\n        })\n      }\n\n})\nexport default usersSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,MAAM,QAAQ,kBAAkB;AAEzC,MAAMC,YAAY,GAAG,EAAE;AACvB,OAAO,MAAMC,UAAU,GAAGH,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACvE,MAAMI,QAAQ,GAAG,MAAMH,MAAM,CAACI,GAAG,CAAC,gBAAgB,CAAC;EACnD,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;AAEJ,MAAMC,UAAU,GAAGR,WAAW,CAAC;EAC3BS,IAAI,EAAE,OAAO;EACbN,YAAY;EACZO,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAaA,CAACC,OAAO,EAAE;IACnBA,OAAO,CAACC,OAAO,CAACT,UAAU,CAACU,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACvD,OAAOA,MAAM,CAACC,OAAO;IACvB,CAAC,CAAC;EACJ;AAEN,CAAC,CAAC;AACF,eAAeT,UAAU,CAACU,OAAO"},"metadata":{},"sourceType":"module"}