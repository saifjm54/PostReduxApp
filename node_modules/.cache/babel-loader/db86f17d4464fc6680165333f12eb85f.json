{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nexports.__esModule = true;\nexports.factory = void 0;\nvar outvariant_1 = require(\"outvariant\");\nvar glossary_1 = require(\"./glossary\");\nvar first_1 = require(\"./utils/first\");\nvar executeQuery_1 = require(\"./query/executeQuery\");\nvar parseModelDefinition_1 = require(\"./model/parseModelDefinition\");\nvar createModel_1 = require(\"./model/createModel\");\nvar updateEntity_1 = require(\"./model/updateEntity\");\nvar OperationError_1 = require(\"./errors/OperationError\");\nvar Database_1 = require(\"./db/Database\");\nvar generateRestHandlers_1 = require(\"./model/generateRestHandlers\");\nvar generateGraphQLHandlers_1 = require(\"./model/generateGraphQLHandlers\");\nvar sync_1 = require(\"./extensions/sync\");\n/**\n * Create a database with the given models.\n */\nfunction factory(dictionary) {\n  var _a;\n  var db = new Database_1.Database(dictionary);\n  // Initialize database extensions.\n  sync_1.sync(db);\n  return Object.entries(dictionary).reduce(function (acc, _a) {\n    var _b = __read(_a, 2),\n      modelName = _b[0],\n      props = _b[1];\n    acc[modelName] = createModelApi(dictionary, modelName, props, db);\n    return acc;\n  }, (_a = {}, _a[glossary_1.DATABASE_INSTANCE] = db, _a));\n}\nexports.factory = factory;\nfunction createModelApi(dictionary, modelName, definition, db) {\n  var parsedModel = parseModelDefinition_1.parseModelDefinition(dictionary, modelName, definition);\n  var primaryKey = parsedModel.primaryKey;\n  var api = {\n    create: function (initialValues) {\n      if (initialValues === void 0) {\n        initialValues = {};\n      }\n      var entity = createModel_1.createModel(modelName, definition, dictionary, parsedModel, initialValues, db);\n      var entityId = entity[entity[glossary_1.PRIMARY_KEY]];\n      if (!entityId) {\n        throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.MissingPrimaryKey, outvariant_1.format('Failed to create a \"%s\" entity: expected the primary key \"%s\" to have a value, but got: %s', modelName, primaryKey, entityId));\n      }\n      // Prevent creation of multiple entities with the same primary key value.\n      if (db.has(modelName, entityId)) {\n        throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.DuplicatePrimaryKey, outvariant_1.format('Failed to create a \"%s\" entity: an entity with the same primary key \"%s\" (\"%s\") already exists.', modelName, entityId, entity[glossary_1.PRIMARY_KEY]));\n      }\n      db.create(modelName, entity);\n      return entity;\n    },\n    count: function (query) {\n      if (!query) {\n        return db.count(modelName);\n      }\n      var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n      return results.length;\n    },\n    findFirst: function (query) {\n      var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n      var firstResult = first_1.first(results);\n      if (query.strict && firstResult == null) {\n        throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound, outvariant_1.format('Failed to execute \"findFirst\" on the \"%s\" model: no entity found matching the query \"%j\".', modelName, query.where));\n      }\n      return firstResult;\n    },\n    findMany: function (query) {\n      var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n      if (results.length === 0 && query.strict) {\n        throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound, outvariant_1.format('Failed to execute \"findMany\" on the \"%s\" model: no entities found matching the query \"%j\".', modelName, query.where));\n      }\n      return results;\n    },\n    getAll: function () {\n      return db.listEntities(modelName);\n    },\n    update: function (_a) {\n      var strict = _a.strict,\n        query = __rest(_a, [\"strict\"]);\n      var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n      var prevRecord = first_1.first(results);\n      if (!prevRecord) {\n        if (strict) {\n          throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound, outvariant_1.format('Failed to execute \"update\" on the \"%s\" model: no entity found matching the query \"%j\".', modelName, query.where));\n        }\n        return null;\n      }\n      var nextRecord = updateEntity_1.updateEntity(prevRecord, query.data, definition);\n      if (nextRecord[prevRecord[glossary_1.PRIMARY_KEY]] !== prevRecord[prevRecord[glossary_1.PRIMARY_KEY]]) {\n        if (db.has(modelName, nextRecord[prevRecord[glossary_1.PRIMARY_KEY]])) {\n          throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.DuplicatePrimaryKey, outvariant_1.format('Failed to execute \"update\" on the \"%s\" model: the entity with a primary key \"%s\" (\"%s\") already exists.', modelName, nextRecord[prevRecord[glossary_1.PRIMARY_KEY]], primaryKey));\n        }\n      }\n      db.update(modelName, prevRecord, nextRecord);\n      return nextRecord;\n    },\n    updateMany: function (_a) {\n      var strict = _a.strict,\n        query = __rest(_a, [\"strict\"]);\n      var records = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n      var updatedRecords = [];\n      if (records.length === 0) {\n        if (strict) {\n          throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound, outvariant_1.format('Failed to execute \"updateMany\" on the \"%s\" model: no entities found matching the query \"%j\".', modelName, query.where));\n        }\n        return null;\n      }\n      records.forEach(function (prevRecord) {\n        var nextRecord = updateEntity_1.updateEntity(prevRecord, query.data, definition);\n        if (nextRecord[prevRecord[glossary_1.PRIMARY_KEY]] !== prevRecord[prevRecord[glossary_1.PRIMARY_KEY]]) {\n          if (db.has(modelName, nextRecord[prevRecord[glossary_1.PRIMARY_KEY]])) {\n            throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.DuplicatePrimaryKey, outvariant_1.format('Failed to execute \"updateMany\" on the \"%s\" model: the entity with a primary key \"%s\" (\"%s\") already exists.', modelName, nextRecord[prevRecord[glossary_1.PRIMARY_KEY]], primaryKey));\n          }\n        }\n        db.update(modelName, prevRecord, nextRecord);\n        updatedRecords.push(nextRecord);\n      });\n      return updatedRecords;\n    },\n    \"delete\": function (_a) {\n      var strict = _a.strict,\n        query = __rest(_a, [\"strict\"]);\n      var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n      var record = first_1.first(results);\n      if (!record) {\n        if (strict) {\n          throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound, outvariant_1.format('Failed to execute \"delete\" on the \"%s\" model: no entity found matching the query \"%o\".', modelName, query.where));\n        }\n        return null;\n      }\n      db[\"delete\"](modelName, record[record[glossary_1.PRIMARY_KEY]]);\n      return record;\n    },\n    deleteMany: function (_a) {\n      var strict = _a.strict,\n        query = __rest(_a, [\"strict\"]);\n      var records = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n      if (records.length === 0) {\n        if (strict) {\n          throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound, outvariant_1.format('Failed to execute \"deleteMany\" on the \"%s\" model: no entities found matching the query \"%o\".', modelName, query.where));\n        }\n        return null;\n      }\n      records.forEach(function (record) {\n        db[\"delete\"](modelName, record[record[glossary_1.PRIMARY_KEY]]);\n      });\n      return records;\n    },\n    toHandlers: function (type, baseUrl) {\n      if (type === 'graphql') {\n        return generateGraphQLHandlers_1.generateGraphQLHandlers(modelName, definition, api, baseUrl);\n      }\n      return generateRestHandlers_1.generateRestHandlers(modelName, definition, api, baseUrl);\n    },\n    toGraphQLSchema: function () {\n      return generateGraphQLHandlers_1.generateGraphQLSchema(modelName, definition, api);\n    }\n  };\n  return api;\n}","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__read","o","n","m","Symbol","iterator","r","ar","next","done","push","value","error","exports","__esModule","factory","outvariant_1","require","glossary_1","first_1","executeQuery_1","parseModelDefinition_1","createModel_1","updateEntity_1","OperationError_1","Database_1","generateRestHandlers_1","generateGraphQLHandlers_1","sync_1","dictionary","_a","db","Database","sync","entries","reduce","acc","_b","modelName","props","createModelApi","DATABASE_INSTANCE","definition","parsedModel","parseModelDefinition","primaryKey","api","create","initialValues","entity","createModel","entityId","PRIMARY_KEY","OperationError","OperationErrorType","MissingPrimaryKey","format","has","DuplicatePrimaryKey","count","query","results","executeQuery","findFirst","firstResult","first","strict","EntityNotFound","where","findMany","getAll","listEntities","update","prevRecord","nextRecord","updateEntity","data","updateMany","records","updatedRecords","forEach","delete","record","deleteMany","toHandlers","type","baseUrl","generateGraphQLHandlers","generateRestHandlers","toGraphQLSchema","generateGraphQLSchema"],"sources":["/home/saif/Documents/Proxym/redux-essentials-example-app/node_modules/@mswjs/data/lib/factory.js"],"sourcesContent":["\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nexports.__esModule = true;\nexports.factory = void 0;\nvar outvariant_1 = require(\"outvariant\");\nvar glossary_1 = require(\"./glossary\");\nvar first_1 = require(\"./utils/first\");\nvar executeQuery_1 = require(\"./query/executeQuery\");\nvar parseModelDefinition_1 = require(\"./model/parseModelDefinition\");\nvar createModel_1 = require(\"./model/createModel\");\nvar updateEntity_1 = require(\"./model/updateEntity\");\nvar OperationError_1 = require(\"./errors/OperationError\");\nvar Database_1 = require(\"./db/Database\");\nvar generateRestHandlers_1 = require(\"./model/generateRestHandlers\");\nvar generateGraphQLHandlers_1 = require(\"./model/generateGraphQLHandlers\");\nvar sync_1 = require(\"./extensions/sync\");\n/**\n * Create a database with the given models.\n */\nfunction factory(dictionary) {\n    var _a;\n    var db = new Database_1.Database(dictionary);\n    // Initialize database extensions.\n    sync_1.sync(db);\n    return Object.entries(dictionary).reduce(function (acc, _a) {\n        var _b = __read(_a, 2), modelName = _b[0], props = _b[1];\n        acc[modelName] = createModelApi(dictionary, modelName, props, db);\n        return acc;\n    }, (_a = {},\n        _a[glossary_1.DATABASE_INSTANCE] = db,\n        _a));\n}\nexports.factory = factory;\nfunction createModelApi(dictionary, modelName, definition, db) {\n    var parsedModel = parseModelDefinition_1.parseModelDefinition(dictionary, modelName, definition);\n    var primaryKey = parsedModel.primaryKey;\n    var api = {\n        create: function (initialValues) {\n            if (initialValues === void 0) { initialValues = {}; }\n            var entity = createModel_1.createModel(modelName, definition, dictionary, parsedModel, initialValues, db);\n            var entityId = entity[entity[glossary_1.PRIMARY_KEY]];\n            if (!entityId) {\n                throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.MissingPrimaryKey, outvariant_1.format('Failed to create a \"%s\" entity: expected the primary key \"%s\" to have a value, but got: %s', modelName, primaryKey, entityId));\n            }\n            // Prevent creation of multiple entities with the same primary key value.\n            if (db.has(modelName, entityId)) {\n                throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.DuplicatePrimaryKey, outvariant_1.format('Failed to create a \"%s\" entity: an entity with the same primary key \"%s\" (\"%s\") already exists.', modelName, entityId, entity[glossary_1.PRIMARY_KEY]));\n            }\n            db.create(modelName, entity);\n            return entity;\n        },\n        count: function (query) {\n            if (!query) {\n                return db.count(modelName);\n            }\n            var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n            return results.length;\n        },\n        findFirst: function (query) {\n            var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n            var firstResult = first_1.first(results);\n            if (query.strict && firstResult == null) {\n                throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound, outvariant_1.format('Failed to execute \"findFirst\" on the \"%s\" model: no entity found matching the query \"%j\".', modelName, query.where));\n            }\n            return firstResult;\n        },\n        findMany: function (query) {\n            var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n            if (results.length === 0 && query.strict) {\n                throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound, outvariant_1.format('Failed to execute \"findMany\" on the \"%s\" model: no entities found matching the query \"%j\".', modelName, query.where));\n            }\n            return results;\n        },\n        getAll: function () {\n            return db.listEntities(modelName);\n        },\n        update: function (_a) {\n            var strict = _a.strict, query = __rest(_a, [\"strict\"]);\n            var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n            var prevRecord = first_1.first(results);\n            if (!prevRecord) {\n                if (strict) {\n                    throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound, outvariant_1.format('Failed to execute \"update\" on the \"%s\" model: no entity found matching the query \"%j\".', modelName, query.where));\n                }\n                return null;\n            }\n            var nextRecord = updateEntity_1.updateEntity(prevRecord, query.data, definition);\n            if (nextRecord[prevRecord[glossary_1.PRIMARY_KEY]] !==\n                prevRecord[prevRecord[glossary_1.PRIMARY_KEY]]) {\n                if (db.has(modelName, nextRecord[prevRecord[glossary_1.PRIMARY_KEY]])) {\n                    throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.DuplicatePrimaryKey, outvariant_1.format('Failed to execute \"update\" on the \"%s\" model: the entity with a primary key \"%s\" (\"%s\") already exists.', modelName, nextRecord[prevRecord[glossary_1.PRIMARY_KEY]], primaryKey));\n                }\n            }\n            db.update(modelName, prevRecord, nextRecord);\n            return nextRecord;\n        },\n        updateMany: function (_a) {\n            var strict = _a.strict, query = __rest(_a, [\"strict\"]);\n            var records = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n            var updatedRecords = [];\n            if (records.length === 0) {\n                if (strict) {\n                    throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound, outvariant_1.format('Failed to execute \"updateMany\" on the \"%s\" model: no entities found matching the query \"%j\".', modelName, query.where));\n                }\n                return null;\n            }\n            records.forEach(function (prevRecord) {\n                var nextRecord = updateEntity_1.updateEntity(prevRecord, query.data, definition);\n                if (nextRecord[prevRecord[glossary_1.PRIMARY_KEY]] !==\n                    prevRecord[prevRecord[glossary_1.PRIMARY_KEY]]) {\n                    if (db.has(modelName, nextRecord[prevRecord[glossary_1.PRIMARY_KEY]])) {\n                        throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.DuplicatePrimaryKey, outvariant_1.format('Failed to execute \"updateMany\" on the \"%s\" model: the entity with a primary key \"%s\" (\"%s\") already exists.', modelName, nextRecord[prevRecord[glossary_1.PRIMARY_KEY]], primaryKey));\n                    }\n                }\n                db.update(modelName, prevRecord, nextRecord);\n                updatedRecords.push(nextRecord);\n            });\n            return updatedRecords;\n        },\n        \"delete\": function (_a) {\n            var strict = _a.strict, query = __rest(_a, [\"strict\"]);\n            var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n            var record = first_1.first(results);\n            if (!record) {\n                if (strict) {\n                    throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound, outvariant_1.format('Failed to execute \"delete\" on the \"%s\" model: no entity found matching the query \"%o\".', modelName, query.where));\n                }\n                return null;\n            }\n            db[\"delete\"](modelName, record[record[glossary_1.PRIMARY_KEY]]);\n            return record;\n        },\n        deleteMany: function (_a) {\n            var strict = _a.strict, query = __rest(_a, [\"strict\"]);\n            var records = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n            if (records.length === 0) {\n                if (strict) {\n                    throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound, outvariant_1.format('Failed to execute \"deleteMany\" on the \"%s\" model: no entities found matching the query \"%o\".', modelName, query.where));\n                }\n                return null;\n            }\n            records.forEach(function (record) {\n                db[\"delete\"](modelName, record[record[glossary_1.PRIMARY_KEY]]);\n            });\n            return records;\n        },\n        toHandlers: function (type, baseUrl) {\n            if (type === 'graphql') {\n                return generateGraphQLHandlers_1.generateGraphQLHandlers(modelName, definition, api, baseUrl);\n            }\n            return generateRestHandlers_1.generateRestHandlers(modelName, definition, api, baseUrl);\n        },\n        toGraphQLSchema: function () {\n            return generateGraphQLHandlers_1.generateGraphQLSchema(modelName, definition, api);\n        }\n    };\n    return api;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}