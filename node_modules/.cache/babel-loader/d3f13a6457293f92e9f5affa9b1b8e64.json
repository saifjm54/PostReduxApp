{"ast":null,"code":"var _jsxFileName = \"/home/saif/Documents/Proxym/redux-essentials-example-app/src/features/posts/AddPostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postAdded } from \"./postsSlice\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddPostForm = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [userId, setUserId] = useState('');\n  const dispatch = useDispatch();\n  const users = useSelector(state => state.users);\n  const onTitleChanged = e => setTitle(e.target.value);\n  const onContentChanged = e => setContent(e.target.value);\n  const onAuthorChanged = e => setUserId(e.target.value);\n  const onSavePostClicked = () => {\n    if (title && content) {\n      dispatch(postAdded(title, content, userId));\n      setTitle('');\n      setContent('');\n    }\n  };\n  const canSave = Boolean(title) && Boolean(content) && Boolean(userId);\n  const usersOptions = users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: user.id,\n    children: user.name\n  }, user.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \"Post Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postTitle\",\n        name: \"postTitle\",\n        value: title,\n        onChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postAuthor\",\n        children: \"Author:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"postAuthor\",\n        value: userId,\n        onChange: onAuthorChanged,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), usersOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postContent\",\n        children: \"Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"postContent\",\n        name: \"postContent\",\n        value: content,\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onSavePostClicked,\n        disabled: !canSave,\n        children: \"Save Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(AddPostForm, \"AlnDcje31HmXI8no0QZzdgZQwLE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = AddPostForm;\nvar _c;\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","postAdded","nanoid","jsxDEV","_jsxDEV","AddPostForm","_s","title","setTitle","content","setContent","userId","setUserId","dispatch","users","state","onTitleChanged","e","target","value","onContentChanged","onAuthorChanged","onSavePostClicked","canSave","Boolean","usersOptions","map","user","id","children","name","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/saif/Documents/Proxym/redux-essentials-example-app/src/features/posts/AddPostForm.js"],"sourcesContent":["import React,{useState} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postAdded } from \"./postsSlice\";\nimport { nanoid } from \"@reduxjs/toolkit\";\n\nexport const AddPostForm = () => {\n    const [title,setTitle] = useState('')\n    const [content,setContent] = useState('')\n    const [userId , setUserId] = useState('')\n    \n    const dispatch = useDispatch()\n\n    const users = useSelector(state => state.users )\n\n    const onTitleChanged = e => setTitle(e.target.value)\n    const onContentChanged = e => setContent(e.target.value)\n    const onAuthorChanged = e => setUserId(e.target.value)\n\n    const onSavePostClicked = () => {\n        if(title && content) {\n            dispatch(postAdded(title,content, userId))\n            setTitle('')\n            setContent('')\n        }\n    }\n    const canSave = Boolean(title) && Boolean(content) && Boolean(userId)\n      \n    const usersOptions = users.map(\n        user => (\n            <option key={user.id} value={user.id}>\n                {user.name}\n            </option>\n        )\n    )\n    return (\n        <section>\n            <h2>Add a New Post</h2>\n            <form>\n                <label htmlFor=\"postTitle\">Post Title:</label>\n                <input type=\"text\" id=\"postTitle\" name=\"postTitle\" value={title} onChange={onTitleChanged} />\n                <label htmlFor=\"postAuthor\">Author:</label>\n                <select id=\"postAuthor\" value={userId} onChange={onAuthorChanged}>\n                    <option value=\"\"></option>\n                    {usersOptions}\n                </select>\n                <label htmlFor=\"postContent\">Content:</label>\n                <textarea id=\"postContent\" name=\"postContent\" value={content} onChange={onContentChanged}/>\n            <button type=\"button\" onClick={onSavePostClicked} disabled={!canSave}>Save Post</button>\n            </form>\n        </section>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}