{"ast":null,"code":"var _jsxFileName = \"/home/saif/Documents/Proxym/redux-essentials-example-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport { worker } from './api/server';\nimport { fetchUsers } from './features/users/usersSlice';\nimport { fetchNotifications } from './features/notifications/notificationsSlice';\n\n// Wrap app rendering so we can wait for the mock API to initialize\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function start() {\n  // Start our mock API server\n  await worker.start({\n    onUnhandledRequest: 'bypass'\n  });\n  store.dispatch(fetchUsers());\n  store.dispatch(fetchNotifications);\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this), document.getElementById('root'));\n}\nstart();","map":{"version":3,"names":["React","ReactDOM","App","store","Provider","worker","fetchUsers","fetchNotifications","jsxDEV","_jsxDEV","start","onUnhandledRequest","dispatch","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById"],"sources":["/home/saif/Documents/Proxym/redux-essentials-example-app/src/index.js"],"sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport store from './app/store'\nimport { Provider } from 'react-redux'\n\nimport { worker } from './api/server'\nimport { fetchUsers } from './features/users/usersSlice'\nimport { fetchNotifications } from './features/notifications/notificationsSlice'\n\n// Wrap app rendering so we can wait for the mock API to initialize\nasync function start() {\n  // Start our mock API server\n  await worker.start({ onUnhandledRequest: 'bypass' })\n\n  store.dispatch(fetchUsers())\n  store.dispatch(fetchNotifications)\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  )\n}\n\nstart()\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,QAAQ,QAAQ,aAAa;AAEtC,SAASC,MAAM,QAAQ,cAAc;AACrC,SAASC,UAAU,QAAQ,6BAA6B;AACxD,SAASC,kBAAkB,QAAQ,6CAA6C;;AAEhF;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAeC,KAAKA,CAAA,EAAG;EACrB;EACA,MAAML,MAAM,CAACK,KAAK,CAAC;IAAEC,kBAAkB,EAAE;EAAS,CAAC,CAAC;EAEpDR,KAAK,CAACS,QAAQ,CAACN,UAAU,CAAC,CAAC,CAAC;EAC5BH,KAAK,CAACS,QAAQ,CAACL,kBAAkB,CAAC;EAElCN,QAAQ,CAACY,MAAM,eACbJ,OAAA,CAACT,KAAK,CAACc,UAAU;IAAAC,QAAA,eACfN,OAAA,CAACL,QAAQ;MAACD,KAAK,EAAEA,KAAM;MAAAY,QAAA,eACrBN,OAAA,CAACP,GAAG;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC,EACnBC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC;AACH;AAEAX,KAAK,CAAC,CAAC"},"metadata":{},"sourceType":"module"}