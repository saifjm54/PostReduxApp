{"ast":null,"code":"var _jsxFileName = \"/home/saif/Documents/Proxym/redux-essentials-example-app/src/features/posts/PostsList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { PostAuthor } from \"./PostAuthor\";\nimport { TimeAgo } from \"./TimeAgo\";\nimport { ReactionButtons } from \"./ReactionButtons\";\nimport { fetchPosts, selectAllPosts } from \"./postsSlice\";\nimport { Spinner } from '../../components/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostExcerpt = _ref => {\n  let {\n    post\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"post-excerpt\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PostAuthor, {\n        userId: post.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TimeAgo, {\n        timestamp: post.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-content\",\n      children: post.content.substring(0, 100)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactionButtons, {\n      post: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/posts/${post.id}`,\n      className: \"button muted-button\",\n      children: \"View Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, post.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = PostExcerpt;\nexport const PostsList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const posts = useSelector(selectAllPosts);\n  const postStatus = useSelector(state => state.posts.status);\n  const error = useSelector(state => state.posts.error);\n  useEffect(() => {\n    if (postStatus === 'idle') {\n      dispatch(fetchPosts());\n    }\n  }, [postStatus, dispatch]);\n  let content;\n  if (postStatus === 'loading') {\n    content = /*#__PURE__*/_jsxDEV(Spinner, {\n      text: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }, this);\n  } else if (postStatus === 'succeeded') {\n    const orderdPosts = posts.slice().sort((a, b) => b.date.localeCompare(a.date));\n    content = orderdPosts.map(post => /*#__PURE__*/_jsxDEV(PostExcerpt, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this));\n  } else if (postStatus === 'failed') {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"posts-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(PostsList, \"WVsaUdjlRZdgFV51nhKfVUEst3c=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c2 = PostsList;\nvar _c, _c2;\n$RefreshReg$(_c, \"PostExcerpt\");\n$RefreshReg$(_c2, \"PostsList\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Link","PostAuthor","TimeAgo","ReactionButtons","fetchPosts","selectAllPosts","Spinner","jsxDEV","_jsxDEV","PostExcerpt","_ref","post","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","userId","user","timestamp","date","content","substring","to","id","_c","PostsList","_s","dispatch","posts","postStatus","state","status","error","text","orderdPosts","slice","sort","a","b","localeCompare","map","_c2","$RefreshReg$"],"sources":["/home/saif/Documents/Proxym/redux-essentials-example-app/src/features/posts/PostsList.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { PostAuthor } from \"./PostAuthor\";\nimport { TimeAgo } from \"./TimeAgo\";\nimport { ReactionButtons } from \"./ReactionButtons\";\nimport { fetchPosts, selectAllPosts } from \"./postsSlice\";\nimport { Spinner } from '../../components/Spinner'\n\nconst PostExcerpt = ({ post }) => {\n    return (\n        <article className=\"post-excerpt\" key={post.id}>\n            <h3>{post.title}</h3>\n            <div>\n                <PostAuthor userId={post.user} />\n                <TimeAgo timestamp={post.date} />\n            </div>\n            <p className=\"post-content\">{post.content.substring(0,100)}</p>\n            <ReactionButtons post={post} />\n            <Link to={`/posts/${post.id}`} className=\"button muted-button\">\n                View Post\n            </Link>\n        </article>\n    )\n}\n\nexport const PostsList = () => {\n    const dispatch = useDispatch()\n    const posts = useSelector(selectAllPosts)\n    const postStatus = useSelector(state => state.posts.status)\n    const error = useSelector(state => state.posts.error)\n\n    useEffect(() => {\n        if (postStatus === 'idle') {\n            dispatch(fetchPosts())\n        }\n    },[postStatus,dispatch]\n    )\n\n    let content\n\n    if(postStatus === 'loading') {\n        content = <Spinner text=\"Loading...\" />\n    } else if(postStatus === 'succeeded') {\n        const orderdPosts = posts.slice().sort((a,b) => b.date.localeCompare(a.date))\n        content = orderdPosts.map(post => (\n            <PostExcerpt key={post.id} post={post} />\n        ))\n    } else if(postStatus === 'failed') {\n        content = <div>{error}</div>\n    }\n\n    \n    return (\n        <section className=\"posts-list\">\n          <h2>Posts</h2>\n          {content}\n        </section>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,IAAI,QAAQ,2CAA2C;AAChE,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,UAAU,EAAEC,cAAc,QAAQ,cAAc;AACzD,SAASC,OAAO,QAAQ,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,WAAW,GAAGC,IAAA,IAAc;EAAA,IAAb;IAAEC;EAAK,CAAC,GAAAD,IAAA;EACzB,oBACIF,OAAA;IAASI,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC7BL,OAAA;MAAAK,QAAA,EAAKF,IAAI,CAACG;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBV,OAAA;MAAAK,QAAA,gBACIL,OAAA,CAACP,UAAU;QAACkB,MAAM,EAAER,IAAI,CAACS;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjCV,OAAA,CAACN,OAAO;QAACmB,SAAS,EAAEV,IAAI,CAACW;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACNV,OAAA;MAAGI,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEF,IAAI,CAACY,OAAO,CAACC,SAAS,CAAC,CAAC,EAAC,GAAG;IAAC;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/DV,OAAA,CAACL,eAAe;MAACQ,IAAI,EAAEA;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/BV,OAAA,CAACR,IAAI;MAACyB,EAAE,EAAG,UAASd,IAAI,CAACe,EAAG,EAAE;MAACd,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAAC;IAE/D;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,GAV4BP,IAAI,CAACe,EAAE;IAAAX,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAWrC,CAAC;AAElB,CAAC;AAAAS,EAAA,GAfKlB,WAAW;AAiBjB,OAAO,MAAMmB,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGhC,WAAW,CAAC,CAAC;EAC9B,MAAMiC,KAAK,GAAGhC,WAAW,CAACM,cAAc,CAAC;EACzC,MAAM2B,UAAU,GAAGjC,WAAW,CAACkC,KAAK,IAAIA,KAAK,CAACF,KAAK,CAACG,MAAM,CAAC;EAC3D,MAAMC,KAAK,GAAGpC,WAAW,CAACkC,KAAK,IAAIA,KAAK,CAACF,KAAK,CAACI,KAAK,CAAC;EAErDtC,SAAS,CAAC,MAAM;IACZ,IAAImC,UAAU,KAAK,MAAM,EAAE;MACvBF,QAAQ,CAAC1B,UAAU,CAAC,CAAC,CAAC;IAC1B;EACJ,CAAC,EAAC,CAAC4B,UAAU,EAACF,QAAQ,CACtB,CAAC;EAED,IAAIP,OAAO;EAEX,IAAGS,UAAU,KAAK,SAAS,EAAE;IACzBT,OAAO,gBAAGf,OAAA,CAACF,OAAO;MAAC8B,IAAI,EAAC;IAAY;MAAArB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3C,CAAC,MAAM,IAAGc,UAAU,KAAK,WAAW,EAAE;IAClC,MAAMK,WAAW,GAAGN,KAAK,CAACO,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAKA,CAAC,CAACnB,IAAI,CAACoB,aAAa,CAACF,CAAC,CAAClB,IAAI,CAAC,CAAC;IAC7EC,OAAO,GAAGc,WAAW,CAACM,GAAG,CAAChC,IAAI,iBAC1BH,OAAA,CAACC,WAAW;MAAeE,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACe,EAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAC3C,CAAC;EACN,CAAC,MAAM,IAAGc,UAAU,KAAK,QAAQ,EAAE;IAC/BT,OAAO,gBAAGf,OAAA;MAAAK,QAAA,EAAMsB;IAAK;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAChC;EAGA,oBACIV,OAAA;IAASI,SAAS,EAAC,YAAY;IAAAC,QAAA,gBAC7BL,OAAA;MAAAK,QAAA,EAAI;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACbK,OAAO;EAAA;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAElB,CAAC;AAAAW,EAAA,CAjCYD,SAAS;EAAA,QACD9B,WAAW,EACdC,WAAW,EACNA,WAAW,EAChBA,WAAW;AAAA;AAAA6C,GAAA,GAJhBhB,SAAS;AAAA,IAAAD,EAAA,EAAAiB,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module"}