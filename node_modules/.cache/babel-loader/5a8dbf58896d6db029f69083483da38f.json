{"ast":null,"code":"var _jsxFileName = \"/home/saif/Documents/Proxym/redux-essentials-example-app/src/features/posts/EditPostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postUpdated } from \"./postsSlice\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditPostForm = _ref => {\n  _s();\n  let {\n    match\n  } = _ref;\n  const {\n    postId\n  } = match.params;\n  const post = useSelector(state => state.posts.find(post => post.id === postId));\n  const [title, setTitle] = useState(post.title);\n  const [content, setContent] = useState(post.content);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const onTitleChanged = e => setTitle(e.target.value);\n  const onContentChanged = e => setContent(e.target.value);\n  const onSavePostClicked = () => {\n    if (title && content) {\n      dispatch(postUpdated({\n        id: postId,\n        title,\n        content\n      }));\n      history.push(`/posts/${postId}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \"Post Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postTitle\",\n        name: \"postTitle\",\n        value: title,\n        onChange: onTitleChanged,\n        placeholder: \"What's on your mind?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postContent\",\n        children: \"Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"postContent\",\n        name: \"postContent\",\n        value: content,\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onSavePostClicked,\n        children: \"Save Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(EditPostForm, \"C00Lklb661v3nkaS3hsB10bEeOo=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n_c = EditPostForm;\nvar _c;\n$RefreshReg$(_c, \"EditPostForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","postUpdated","nanoid","useHistory","jsxDEV","_jsxDEV","EditPostForm","_ref","_s","match","postId","params","post","state","posts","find","id","title","setTitle","content","setContent","dispatch","history","onTitleChanged","e","target","value","onContentChanged","onSavePostClicked","push","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","name","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/saif/Documents/Proxym/redux-essentials-example-app/src/features/posts/EditPostForm.js"],"sourcesContent":["import React,{useState} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postUpdated } from \"./postsSlice\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\n\nexport const EditPostForm = ({ match }) => {\n\n    const { postId } = match.params\n     \n    const post = useSelector(\n        state => state.posts.find(post => post.id === postId )\n    )\n\n    const [title,setTitle] = useState(post.title)\n    const [content,setContent] = useState(post.content)\n    \n    const dispatch = useDispatch()\n    \n    const history = useHistory()\n\n    const onTitleChanged = e => setTitle(e.target.value)\n    const onContentChanged = e => setContent(e.target.value)\n\n    const onSavePostClicked = () => {\n        if(title && content) {\n            dispatch(\n                postUpdated({\n                    id : postId,\n                    title,\n                    content\n                })\n            )\n            history.push(`/posts/${postId}`)\n        }\n    }\n\n    return (\n        <section>\n            <h2>Edit Post</h2>\n            <form>\n                <label htmlFor=\"postTitle\">Post Title:</label>\n                <input type=\"text\" id=\"postTitle\" name=\"postTitle\" value={title} onChange={onTitleChanged} placeholder=\"What's on your mind?\"/>\n                <label htmlFor=\"postContent\">Content:</label>\n                <textarea id=\"postContent\" name=\"postContent\" value={content} onChange={onContentChanged}/>\n            <button type=\"button\" onClick={onSavePostClicked}>Save Post</button>\n            </form>\n        </section>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}